[{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"cheatsheet","dir":"Articles","previous_headings":"","what":"1. Cheatsheet","title":"Create OmicSignature","text":"OmicSignature object contains three parts: metadata, list. Required fields: “signature_name”, “organism”, “direction_type”, “assay_type”, “phenotype”, “author”. Recommended optional fields, applicable: “platform”, “sample_type”, “description”, “covariates”, “score_cutoff”, “adj_p_cutoff”. information provided string (spaces punctuation allowed) one numeric value, multi-length vector. signature, data frame. Required columns: “probe_id” (unique identifier feature) “feature_name” (e.g. ENSEMBL ID, Uniprot ID) Required bi-directional categorical signatures: “group_label” Recommended optional column, applicable: “score” difexp (optional), data frame differential expression analysis results. Required columns: “probe_id” (unique identifier feature) “feature_name” (e.g. ENSEMBL ID, Uniprot ID) “score” Required bi-directional categorical signatures: “group_label” least one following: “p_value”, “q_value”, “adj_p”. Recommended optional column, applicable: “gene_symbol” Create object:","code":"OmS <- OmicSignature$new(   metadata = metadata,   signature = signature,   difexp = difexp )"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"create-an-omicsignature-object-step-by-step","dir":"Articles","previous_headings":"","what":"2. Create an OmicSignature Object Step-by-Step","title":"Create OmicSignature","text":"example provided experiment evaluating effects Myc reduced expression comparing liver profiles 24-month old Myc+/+^{+/+}vs. Myc+/−^{+/-} mice. bi-directional signature example, since comparison two groups, contains regulated features (genes). ease exposition, top 1000 genes included.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"metadata","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step","what":"2.1. Metadata","title":"Create OmicSignature","text":"list following required fields: “signature_name”, “organism”, “direction_type”, “assay_type”, “phenotype”, “author”. required, highly recommended fields: “platform”, “sample_type”, “description”, “covariates”, “score_cutoff”, “adj_p_cutoff”, “logfc_cutoff”. Option 1: Create metadata hand. recommended, typos can occur. Option 2: Use createMetadata() (recommended). function helps remind built-attributes. full list current built-attributes shown . can also provide customized attributes using “others” field.","code":"metadata <- list(   \"signature_name\" = Myc_reduce_mice_liver_24m,   \"organism\" = \"Mus musculus\",   \"sample_type\" = \"liver\",   \"phenotype\" = \"Myc_reduce\",   \"direction_type\" = \"bi-directional\",   \"assay_type\" = \"transcriptomics\",    \"platform\" = \"transcriptomics by array\",   \"author\" = \"Researcher1\" ) metadata <- createMetadata(   # required attributes:   signature_name = \"Myc_reduce_mice_liver_24m\",   organism = \"Mus musculus\",   direction_type = \"bi-directional\",   assay_type = \"transcriptomics\",   phenotype = \"Myc_reduce\",   author = \"Researcher1\",    # optional and recommended:   covariates = \"age, gender\",   description = \"mice Myc haploinsufficient (Myc(+/-))\",   platform = \"transcriptomics by array\",   sample_type = \"liver\", # use BRENDA ontology    # optional cut-off attributes.   # specifying them can facilitate the extraction of signatures.   logfc_cutoff = NULL,   p_value_cutoff = NULL,   adj_p_cutoff = 0.05,   score_cutoff = 5,    # other optional built-in attributes:   keywords = c(\"Myc\", \"KO\", \"longevity\"),   cutoff_description = NULL,   PMID = 25619689,   year = 2015,    # example of customized attributes:   others = list(\"animal_strain\" = \"C57BL/6\") )"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"phenotype","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step > 2.1. Metadata","what":"2.1.1 “phenotype”","title":"Create OmicSignature","text":"“‘phenotype’ free text, usually one- two-word description experimental condition trait study, drug treatment, gene knockout, clinical characteristic. Examples include age, breast cancer, drug X. Providing detailed (free text) “description” highly recommended. instance, may include information treatment administered group defined. character limit description 65,535 (16-bit storage), space included.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"organism","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step > 2.1. Metadata","what":"2.1.2 “organism","title":"Create OmicSignature","text":"“organism” free text. provide pre-defined list common organisms, can search using searchOrganism(). entries allowed, please use standard naming conventions (e.g., “Homo sapiens”, “Mus musculus”) ensure consistency.","code":"searchOrganism(\"homo\") #> [1] \"Homo sapiens\""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"sample_type-and-platform","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step > 2.1. Metadata","what":"2.1.3 “sample_type” and “platform”","title":"Create OmicSignature","text":"“sample_type” “platform” free text, recommended predefined terms used. Thus, “sample_type” BRENDA ontology term, “platform” one set predefined platforms, appropriate. can search predefined terms via searchSampleType searchPlatform functions. See “Sample Type & Platform Info” details.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"direction_type","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step > 2.1. Metadata","what":"2.1.4 “direction_type”","title":"Create OmicSignature","text":"direction_type must one following: “uni-directional”. list significant feature names available. Examples including “genes mutated disease” “markers specific cell type”. “bi-directional”. Significant features derived comparison two groups, single continuous trait. Thus, resulting significant features can grouped two categories. example, comparing treatment vs. control groups, features higher lower treatment group. phenotype continuous trait, age, features increase age, others decrease age. “categorical”. Used multi-valued categorical phenotypes (e.g., “” vs. “B” vs. “C”), usually analyzed ANOVA.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"assay_type","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step > 2.1. Metadata","what":"2.1.5 “assay_type”","title":"Create OmicSignature","text":"assay_type one following: - “transcriptomics” (e.g. RNA-seq, micro-array) - “proteomics” - “metabolomics” - “methylomics” - “genetic_variations” (e.g. SNP, GWAS) - “DNA_binding_sites” (e.g. ChIP-seq) - “” can also use searchAssayType() see list .","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"signature","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step","what":"2.2. Signature","title":"Create OmicSignature","text":"signature dataframe columns “probe_id” “feature_name”. signature bi-directional categorical (specified direction_type within metadata), additional column, “group_label”, also required. optional column “score” highly recommended applicable. “probe_id” unique identifier, usually platform-specific identifider (e.g., probe IDs Affymetrix microarrays, aptamer IDs SomaScan assays). provided, automatically generated. “feature_name” name identifies feature, examples include ENSEMBL IDs transcripts, UniProt IDs proteins, Refmet IDs metabolites. better identify features, recommended add additional annotation column(s), e.g., “gene_symbol”. metabolite features, recommended include multiple annotation columns available, e.g., HMDB ID InChI key.“group_label” factor column. column indicates experimental group feature highly expressed significant. example, analysis identifies genes differentially expressed Treatment v.s. Control, gene features positive score labeled “Treatment” column, indicating higher expression Treatment group. Features negative scores labeled “Control”. Similarly, analysis concerns protein expression changes associated BMI, protein features positive scores labeled “higher BMI”, negative scores labeled “lower BMI”. Option 1: Extract signature differential analysis results table. example, extract bi-directional signature difexp object (see next section) using score_cutoff adj_p_cutoff specified metadata. difexp object properly formatted data frame reporting results differential analysis (e.g., Limma). can extract significant features follows: Function standardizeSigDF() can help remove duplicated empty names. Option 2: Manually create signature dataframe. uni-directional signature: bi-directional signature: multi-categorical signature:","code":"#>   probe_id  logfc  mean  score p_value adj_p      b       feature_name #> 1 10345228 -0.167 7.106 -1.470   0.186 0.560 -5.866 ENSMUSG00000103746 #> 2 10354534  0.041 4.351  0.520   0.620 0.870 -6.780 ENSMUSG00000060715 #> 3 10354529 -0.175 4.955 -0.941   0.379 0.731 -6.458 ENSMUSG00000043629 #> 4 10346337  0.025 8.621  0.188   0.857 0.962 -6.911 ENSMUSG00000038323 #> 5 10353792 -0.025 6.063 -0.284   0.785 0.936 -6.885 ENSMUSG00000045815 #> 6 10350848 -0.055 7.595 -0.630   0.549 0.836 -6.712 ENSMUSG00000049881 signature <- difexp %>%   dplyr::filter(abs(score) > metadata$score_cutoff & adj_p < metadata$adj_p_cutoff) %>%   dplyr::select(probe_id, feature_name, score) %>%   dplyr::mutate(group_label = as.factor(ifelse(score > 0, \"MYC Reduce\", \"WT\"))) head(signature) #>   probe_id       feature_name   score group_label #> 1 10346882 ENSMUSG00000025964  -6.990          WT #> 2 10353878 ENSMUSG00000067653  -7.867          WT #> 3 10349648 ENSMUSG00000004552  14.762  MYC Reduce #> 4 10355278 ENSMUSG00000062209   6.083  MYC Reduce #> 5 10353192 ENSMUSG00000025932  10.487  MYC Reduce #> 6 10345762 ENSMUSG00000026072 -13.543          WT signature <- standardizeSigDF(signature) head(signature) #>   probe_id       feature_name   score group_label #> 1 10349648 ENSMUSG00000004552  14.762  MYC Reduce #> 2 10345762 ENSMUSG00000026072 -13.543          WT #> 3 10353192 ENSMUSG00000025932  10.487  MYC Reduce #> 4 10355259 ENSMUSG00000061816 -10.315          WT #> 5 10351477 ENSMUSG00000102418   8.818  MYC Reduce #> 6 10353878 ENSMUSG00000067653  -7.867          WT signature <- data.frame(\"probe_id\" = c(1, 2, 3), \"feature_name\" = c(\"gene1\", \"gene2\", \"gene3\")) signature <- data.frame(   \"probe_id\" = c(1, 2, 3),   \"feature_name\" = c(\"gene1\", \"gene2\", \"gene3\"),   \"score\" = c(0.45, -3.21, 2.44),   \"group_label\" = c(\"Treatment\", \"Control\", \"Treatment\") ) signature <- data.frame(   \"probe_id\" = c(1, 2, 3, 4),   \"feature_name\" = c(\"gene1\", \"gene2\", \"gene3\", \"gene4\"),   \"score\" = c(0.45, -3.21, 2.44, -2.45),   \"group_label\" = c(\"group1\", \"group1\", \"group2\", \"group3\") )"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"differential-expression-analysis-results-difexp","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step","what":"2.3. Differential expression analysis results (difexp)","title":"Create OmicSignature","text":"differential expression dataframe optional recommended available. facilitates downstream signature extraction, signature comparison rank-based test. difexp dataframe following required columns: “probe_id”, “feature_name”, “score”, along least one following: “p_value”, “q_value”, “adj_p”. signature dataframe, “group_label” also required signature bi-directional categorical. Descriptions probe_id, feature_name, group_label provided signature section . “p_value”, “q_value”, “adj_p” refers p- q-value representing significance feature. “score” numeric value indicates importance significance feature. Depending signature derived, can t-statistics, log-fold change, Z-score, summary statistics. use example differential expression analysis using limma package. Manually change column names match requirement. built-function replaceDifexpCol() designed replace frequently used alternative column names. required columns difexp, give warning: Create required columns “feature_name” “group_label”:","code":"# Version reading from a txt file # difexp <- read.table( #   file.path( #     system.file(\"extdata\", package = \"OmicSignature\"), #     \"difmatrix_Myc_mice_liver_24m.txt\" #   ), #   header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE # ) # Version reading from a binary file difexp <- readRDS(   file.path(     system.file(\"extdata\", package = \"OmicSignature\"),     \"difmatrix_Myc_mice_liver_24m.rds\"   ) ) head(difexp) #>   Probe.ID  logFC AveExpr      t P.Value adj.P.Val      b            ensembl #> 1 10345228 -0.167   7.106 -1.470   0.186     0.560 -5.866 ENSMUSG00000103746 #> 2 10354534  0.041   4.351  0.520   0.620     0.870 -6.780 ENSMUSG00000060715 #> 3 10354529 -0.175   4.955 -0.941   0.379     0.731 -6.458 ENSMUSG00000043629 #> 4 10346337  0.025   8.621  0.188   0.857     0.962 -6.911 ENSMUSG00000038323 #> 5 10353792 -0.025   6.063 -0.284   0.785     0.936 -6.885 ENSMUSG00000045815 #> 6 10350848 -0.055   7.595 -0.630   0.549     0.836 -6.712 ENSMUSG00000049881 #>     gene_symbol #> 1 1700001G17Rik #> 2 1700019A02Rik #> 3 1700019D03Rik #> 4 1700066M21Rik #> 5 1700101I19Rik #> 6 2810025M15Rik colnames(difexp) <- replaceDifexpCol(colnames(difexp)) #> Warning in replaceDifexpCol(colnames(difexp)): Required column for #> OmicSignature object difexp: feature_name, is not found in your input. This may #> cause problem when creating your OmicSignature object. difexp <- difexp %>%   rename(feature_name = ensembl) %>%   mutate(group_label = as.factor(ifelse(score > 0, \"MYC Reduce\", \"WT\"))) head(difexp) #>   probe_id  logfc  mean  score p_value adj_p      b       feature_name #> 1 10345228 -0.167 7.106 -1.470   0.186 0.560 -5.866 ENSMUSG00000103746 #> 2 10354534  0.041 4.351  0.520   0.620 0.870 -6.780 ENSMUSG00000060715 #> 3 10354529 -0.175 4.955 -0.941   0.379 0.731 -6.458 ENSMUSG00000043629 #> 4 10346337  0.025 8.621  0.188   0.857 0.962 -6.911 ENSMUSG00000038323 #> 5 10353792 -0.025 6.063 -0.284   0.785 0.936 -6.885 ENSMUSG00000045815 #> 6 10350848 -0.055 7.595 -0.630   0.549 0.836 -6.712 ENSMUSG00000049881 #>     gene_symbol group_label #> 1 1700001G17Rik          WT #> 2 1700019A02Rik  MYC Reduce #> 3 1700019D03Rik          WT #> 4 1700066M21Rik  MYC Reduce #> 5 1700101I19Rik          WT #> 6 2810025M15Rik          WT"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"create-the-omicsignature-object","dir":"Articles","previous_headings":"2. Create an OmicSignature Object Step-by-Step","what":"2.4. Create the OmicSignature object","title":"Create OmicSignature","text":"Set print_message = TRUE see messages. See created object information: Use new criteria extract significant features: (change signature saved object) Besides saving reading OmicSignature object .rds format, can export object text file json format. See “Functionalities OmicSignature” section.","code":"OmS <- OmicSignature$new(   metadata = metadata,   signature = signature,   difexp = difexp ) #>   [Success] OmicSignature object Myc_reduce_mice_liver_24m created. OmS <- OmicSignature$new(   metadata = metadata,   signature = signature,   difexp = difexp,   print_message = TRUE ) #>   -- Required attributes for metadata: signature_name, phenotype, organism, direction_type, assay_type -- #>   [Success] Metadata is saved.  #>   [Success] Signature is valid.  #>   [Success] difexp is valid.  #>   [Success] OmicSignature object Myc_reduce_mice_liver_24m created. print(OmS) #> Signature Object:  #>   Metadata:  #>     adj_p_cutoff = 0.05  #>     assay_type = transcriptomics  #>     author = Researcher1  #>     covariates = age, gender  #>     description = mice Myc haploinsufficient (Myc(+/-))  #>     direction_type = bi-directional  #>     keywords = Myc, KO, longevity  #>     organism = Mus musculus  #>     others = C57BL/6  #>     phenotype = Myc_reduce  #>     platform = transcriptomics by array  #>     PMID = 25619689  #>     sample_type = liver  #>     score_cutoff = 5  #>     signature_name = Myc_reduce_mice_liver_24m  #>     year = 2015  #>   Metadata user defined fields:  #>     animal_strain = C57BL/6  #>   Signature:  #>     MYC Reduce (5) #>     WT (10) #>   Differential Expression Data:  #>     884 x 10 OmS$extractSignature(\"abs(score) > 10; adj_p < 0.01\") #>   probe_id       feature_name   score group_label #> 1 10349648 ENSMUSG00000004552  14.762  MYC Reduce #> 2 10345762 ENSMUSG00000026072 -13.543          WT #> 3 10353192 ENSMUSG00000025932  10.487  MYC Reduce #> 4 10355259 ENSMUSG00000061816 -10.315          WT saveRDS(OmS, \"Myc_reduce_mice_liver_24m_OmS.rds\") writeJson(OmS, \"Myc_reduce_mice_liver_24m_OmS.json\")"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmS.html","id":"create-an-omicsignature-from-difexp-and-metadata","dir":"Articles","previous_headings":"","what":"3. Create an OmicSignature from difexp and metadata","title":"Create OmicSignature","text":"can -pass generating signature process expert. Simply provide cutoffs (e.g. adj_p_cutoff score_cutoff) metadata, make sure difexp “adj_p”, “score” “group_label” columns, use OmicSigFromDifexp() automatically extract significant features create OmicSignature object.","code":"OmS1 <- OmicSigFromDifexp(difexp, metadata) #> -- criterias used to extract signatures:  abs(score) >= 5; adj_p <= 0.05 .  #>  #>   [Success] OmicSignature object Myc_reduce_mice_liver_24m created. OmS1 #> Signature Object:  #>   Metadata:  #>     adj_p_cutoff = 0.05  #>     assay_type = transcriptomics  #>     author = Researcher1  #>     covariates = age, gender  #>     description = mice Myc haploinsufficient (Myc(+/-))  #>     direction_type = bi-directional  #>     keywords = Myc, KO, longevity  #>     organism = Mus musculus  #>     others = C57BL/6  #>     phenotype = Myc_reduce  #>     platform = transcriptomics by array  #>     PMID = 25619689  #>     sample_type = liver  #>     score_cutoff = 5  #>     signature_name = Myc_reduce_mice_liver_24m  #>     year = 2015  #>   Metadata user defined fields:  #>     animal_strain = C57BL/6  #>   Signature:  #>     MYC Reduce (5) #>     WT (10) #>   Differential Expression Data:  #>     884 x 10"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmSC.html","id":"create-an-omicsignaturecollection-object","dir":"Articles","previous_headings":"","what":"Create an OmicSignatureCollection Object","title":"Create OmicSignatureCollection","text":"object contains several OmicSignature objects facilitate analysis. OmicSignatureCollection object contains two parts: - metadata - OmicSigList, list OmicSignature Objects","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmSC.html","id":"metadata-for-the-collection","dir":"Articles","previous_headings":"Create an OmicSignatureCollection Object","what":"1. Metadata for the Collection","title":"Create OmicSignatureCollection","text":"required fields metadata : “collection_name”, “description”. Additional optional fields can added.","code":"ColMeta <- list(   \"collection_name\" = \"Example_Collection\",   \"description\" = \"An example of signature collection\",   \"organism\" = \"Mus Musculus\",   \"author\" = \"me\" )"},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmSC.html","id":"prepare-omicsignature-objects","dir":"Articles","previous_headings":"Create an OmicSignatureCollection Object","what":"2. Prepare OmicSignature objects","title":"Create OmicSignatureCollection","text":"Create read OmicSignature objects. following signatures pseudo results illustration purpose.","code":"OmicObj1 <- readJson(file.path(system.file(\"extdata\", package = \"OmicSignature\"), \"OmS_example_1.json\")) #>   [Success] OmicSignature object Experiment in liver created. OmicObj2 <- readJson(file.path(system.file(\"extdata\", package = \"OmicSignature\"), \"OmS_example_2.json\")) #>   [Success] OmicSignature object Experiment in brain created. OmicObj3 <- readJson(file.path(system.file(\"extdata\", package = \"OmicSignature\"), \"OmS_example_3.json\")) #>   [Success] OmicSignature object Experiment in heart created."},{"path":"https://montilab.github.io/OmicSignature/articles/CreateOmSC.html","id":"create-an-omicsignaturecollection-object-1","dir":"Articles","previous_headings":"Create an OmicSignatureCollection Object","what":"3. Create an OmicSignatureCollection object","title":"Create OmicSignatureCollection","text":"Use OmicSignatureCollection$new() provide metadata list OmicSignature objects: creation OmicSignatureCollection, input OmicSignature objects re-created make sure pass check functions.","code":"OmicCol <- OmicSignatureCollection$new(   OmicSigList = list(OmicObj1, OmicObj2, OmicObj3),   metadata = ColMeta,   print_message = FALSE )  OmicCol"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmS.html","id":"read-an-omicsignature-object-from-a-json-file","dir":"Articles","previous_headings":"","what":"Read an OmicSignature object from a json file","title":"Functionalities of OmicSignature","text":"Alternatively, can read write object .rds format R objects.","code":"OmS <- readJson(file.path(system.file(\"extdata\", package = \"OmicSignature\"), \"Myc_reduce_mice_liver_24m_OmS.json\")) #>   [Success] OmicSignature object Myc_reduce_mice_liver_24m created."},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmS.html","id":"write-an-omicsignature-object-into-a-json-file","dir":"Articles","previous_headings":"","what":"Write an OmicSignature object into a json file","title":"Functionalities of OmicSignature","text":"","code":"writeJson(OmS, \"Myc_reduce_mice_liver_24m_OmS.json\")"},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmS.html","id":"print-and-see-the-metadata","dir":"Articles","previous_headings":"","what":"Print and see the metadata","title":"Functionalities of OmicSignature","text":"","code":"OmS #> Signature Object:  #>   Metadata:  #>     adj_p_cutoff = 0.05  #>     assay_type = transcriptomics  #>     author = vmli  #>     covariates = none  #>     description = mice MYC reduced expression  #>     direction_type = bi-directional  #>     keywords = Myc, KO, longevity  #>     organism = Mus musculus  #>     others = C57BL/6  #>     phenotype = Myc_reduce  #>     platform = transcriptomics by array  #>     PMID = 25619689  #>     sample_type = liver  #>     score_cutoff = 5  #>     signature_name = Myc_reduce_mice_liver_24m  #>     year = 2015  #>   Metadata user defined fields:  #>     animal_strain = C57BL/6  #>   Signature:  #>     MYC reduce (5) #>     WT (10) #>   Differential Expression Data:  #>     884 x 10"},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmS.html","id":"extract-new-signatures-from-the-omicsignature-object","dir":"Articles","previous_headings":"","what":"Extract new signatures from the OmicSignature object","title":"Functionalities of OmicSignature","text":"can use new criterias extract new signatures conveniently OmicSignature Object, difexp matrix included. example, extract features t-score absolute value higher 5 adj_p smaller 0.01:","code":"OmS$extractSignature(\"abs(score) > 5; adj_p < 0.01\") #>   probe_id       feature_name   score group_label #> 1 10349648 ENSMUSG00000004552  14.762   treatment #> 2 10345762 ENSMUSG00000026072 -13.543     control #> 3 10353192 ENSMUSG00000025932  10.487   treatment #> 4 10355259 ENSMUSG00000061816 -10.315     control #> 5 10351477 ENSMUSG00000102418   8.818   treatment"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmSC.html","id":"print-a-summary-of-the-metadata-in-the-omicsignaturecollection","dir":"Articles","previous_headings":"","what":"Print a summary of the metadata in the OmicSignatureCollection","title":"Functionalities of OmicSignatureCollection","text":"$metadataSummary() print metadata fields OmicSignature objects stored OmicSignatureCollection. parameter “only_shared” set TRUE, shared metadata fields among OmicSignature objects included. Otherwise, metadata fields included.","code":"OmSC$metadataSummary(only_shared = TRUE) #>                Experiment in liver        Experiment in brain        #> assay_type     \"transcriptomics\"          \"transcriptomics\"          #> author         \"vmli\"                     \"vmli\"                     #> covariates     \"age, gender\"              \"age, gender\"              #> description    \"Experiment in liver\"      \"Experiment in brain\"      #> direction_type \"bi-directional\"           \"bi-directional\"           #> organism       \"Mus musculus\"             \"Mus musculus\"             #> p_cutoff       0.05                       0.05                       #> phenotype      \"new_experiment\"           \"new_experiment\"           #> platform       \"transcriptomics by array\" \"transcriptomics by array\" #> sample_type    \"liver\"                    \"brain\"                    #> score_cutoff   3                          3                          #> signature_name \"Experiment in liver\"      \"Experiment in brain\"      #>                Experiment in heart        #> assay_type     \"transcriptomics\"          #> author         \"vmli\"                     #> covariates     \"age, gender\"              #> description    \"Experiment in heart\"      #> direction_type \"bi-directional\"           #> organism       \"Mus musculus\"             #> p_cutoff       0.05                       #> phenotype      \"new_experiment\"           #> platform       \"transcriptomics by array\" #> sample_type    \"heart\"                    #> score_cutoff   3                          #> signature_name \"Experiment in heart\""},{"path":"https://montilab.github.io/OmicSignature/articles/FunOmSC.html","id":"extract-new-signatures-from-the-omicsignaturecollection-object","dir":"Articles","previous_headings":"","what":"Extract new signatures from the OmicSignatureCollection object","title":"Functionalities of OmicSignatureCollection","text":"example, extract features absolute score > 4.5 p < 0.01 OmicSignature object stored Collection. features ranked absolute score, applicable. bind set FALSE, output OmicSignature objects provided list.","code":"OmSC$extractSignature(\"abs(score) > 4.5 & p_value < 0.01\") #>               sig_name probe_id feature_name score group_label #> 1  Experiment in brain       14       gene14 -4.99     control #> 2  Experiment in heart       28       gene28  4.99   treatment #> 3  Experiment in heart       32       gene32 -4.90     control #> 4  Experiment in brain        9        gene9 -4.86     control #> 5  Experiment in brain       15       gene15 -4.77     control #> 6  Experiment in liver       46       gene46 -4.71     control #> 7  Experiment in heart       25       gene25  4.71   treatment #> 8  Experiment in heart       49       gene49 -4.70     control #> 9  Experiment in liver       13       gene13  4.68   treatment #> 10 Experiment in liver       48       gene48 -4.67     control #> 11 Experiment in brain       25       gene25 -4.62     control #> 12 Experiment in brain       16       gene16 -4.59     control #> 13 Experiment in heart        6        gene6 -4.54     control OmSC$extractSignature(\"abs(score) > 4.5 & p_value < 0.01\", bind = FALSE) #> $`Experiment in liver` #>   probe_id feature_name score group_label #> 1       46       gene46 -4.71     control #> 2       13       gene13  4.68   treatment #> 3       48       gene48 -4.67     control #>  #> $`Experiment in brain` #>   probe_id feature_name score group_label #> 1       14       gene14 -4.99     control #> 2        9        gene9 -4.86     control #> 3       15       gene15 -4.77     control #> 4       25       gene25 -4.62     control #> 5       16       gene16 -4.59     control #>  #> $`Experiment in heart` #>   probe_id feature_name score group_label #> 1       28       gene28  4.99   treatment #> 2       32       gene32 -4.90     control #> 3       25       gene25  4.71   treatment #> 4       49       gene49 -4.70     control #> 5        6        gene6 -4.54     control"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/articles/ObjectStructure.html","id":"omicsignature-object-structure","dir":"Articles","previous_headings":"","what":"OmicSignature object structure","title":"Structure of OmicSignature & OmicSignatureCollection","text":"OmicSignature object contains three parts: - metadata, list containing metadata fields; - signature, dataframe names, directions scores applicable, “significant” features; - difexp, optional, dataframe complete differential expression analysis result. See create one.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/ObjectStructure.html","id":"omicsignaturecollection-object-structure","dir":"Articles","previous_headings":"","what":"OmicSignatureCollection object structure","title":"Structure of OmicSignature & OmicSignatureCollection","text":"OmicSignatureCollection object contains two parts: - metadata, list containing collection’s metadata fields; - OmicSigList, list OmicSignature Objects See create one.","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/ObjectStructure.html","id":"cheat-sheet-of-main-functionalities","dir":"Articles","previous_headings":"","what":"Cheat-Sheet of main functionalities","title":"Structure of OmicSignature & OmicSignatureCollection","text":"–","code":""},{"path":"https://montilab.github.io/OmicSignature/articles/SampleType.html","id":"search-for-sample-type-and-platform","dir":"Articles","previous_headings":"","what":"Search for sample type and platform","title":"Sample Type & Platform Info","text":"Multiple search terms seperated space ” “. search case -sensitive. Set contain_all = TRUE show results include search terms. Set contain_all = FALSE show results include search terms. Search single word: Search multiple words: contain_all = FALSE, results matching key words returned.","code":"searchSampleType(\"mcf cell\", contain_all = TRUE) ##               ID              Name ## 95   BTO:0000093        MCF-7 cell ## 1939 BTO:0001939      MCF-10A cell ## 2270 BTO:0002270     MCF-7/2a cell ## 2544 BTO:0002544      MCF-12A cell ## 2545 BTO:0002545      MCF-12F cell ## 3900 BTO:0003900      MCF-10F cell ## 5124 BTO:0005127 MCF-10A neoT cell ## 5189 BTO:0005192    MCF-7/adr cell ## 5967 BTO:0005970   MCF-7/LCC9 cell ## 6395 BTO:0006398    MCF-10-2A cell searchSampleType(\"MCF-10 MCF-7\", contain_all = FALSE) ##               ID              Name ## 95   BTO:0000093        MCF-7 cell ## 2270 BTO:0002270     MCF-7/2a cell ## 5189 BTO:0005192    MCF-7/adr cell ## 5967 BTO:0005970   MCF-7/LCC9 cell ## 1939 BTO:0001939      MCF-10A cell ## 3900 BTO:0003900      MCF-10F cell ## 5124 BTO:0005127 MCF-10A neoT cell ## 6395 BTO:0006398    MCF-10-2A cell searchPlatform(\"proteomics\") ## [1] \"proteomics by array\"                         ## [2] \"proteomics by mass spectrometry\"             ## [3] \"proteomics by NMR\"                           ## [4] \"proteomics by antibody or aptamer\"           ## [5] \"proteomics by fluorescence\"                  ## [6] \"single-cell proteomics by mass spectrometry\" searchPlatform(c(\"transcript\", \"single-cell\"), contain_all = TRUE) ## [1] \"transcriptomics by single-cell RNA-seq\" ## [2] \"single-cell spatial transcriptomics\" searchPlatform(c(\"transcript\", \"single-cell\"), contain_all = FALSE) ## [1] \"transcriptomics by single-cell RNA-seq\"      ## [2] \"single-cell spatial transcriptomics\"         ## [3] \"single-cell proteomics by mass spectrometry\" ## [4] \"single-cell CITE-seq\"                        ## [5] \"transcriptomics by array\"                    ## [6] \"transcriptomics by bulk RNA-seq\"             ## [7] \"transcriptomics by long-read sequencing\"     ## [8] \"ribosome transcriptomics\"                    ## [9] \"spatial transcriptomics\""},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vanessa Mengze Li. Author, maintainer. Stefano Monti. Author.","code":""},{"path":"https://montilab.github.io/OmicSignature/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li V, Monti S (2025). OmicSignature: R package store omics signatures R6 object. R package version 1.2.1, https://github.com/montilab/OmicSignature.","code":"@Manual{,   title = {OmicSignature: An R package to store omics signatures as an R6 object},   author = {Vanessa Mengze Li and Stefano Monti},   year = {2025},   note = {R package version 1.2.1},   url = {https://github.com/montilab/OmicSignature}, }"},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"omicsignature","dir":"","previous_headings":"","what":"An R package to store omics signatures as an R6 object","title":"An R package to store omics signatures as an R6 object","text":"Contact: Vanessa Mengze Livmli@bu.edu","code":""},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"last-update","dir":"","previous_headings":"","what":"Last update","title":"An R package to store omics signatures as an R6 object","text":"Oct 14th 2025","code":""},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"github-link","dir":"","previous_headings":"","what":"Github Link","title":"An R package to store omics signatures as an R6 object","text":"montilab/OmicSignature","code":""},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package to store omics signatures as an R6 object","text":"devtools::install_github(repo = \"montilab/OmicSignature\")","code":""},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"An R package to store omics signatures as an R6 object","text":"R6 object OmicSignature OmicSignatureCollection store high-throughput experiment yield signaturess.","code":""},{"path":"https://montilab.github.io/OmicSignature/index.html","id":"vignette-index","dir":"","previous_headings":"","what":"Vignette index","title":"An R package to store omics signatures as an R6 object","text":"See Articles tab group. Overview object structure Create OmicSignature Create OmicSignatureCollection Functionalities OmicSignature OmicSignatureCollection","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDA.html","id":null,"dir":"Reference","previous_headings":"","what":"BRENDA tissue ontology obo file. using version 2021/10 — BRENDA","title":"BRENDA tissue ontology obo file. using version 2021/10 — BRENDA","text":"BTO:0000000 set \"unknown\"","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BRENDA tissue ontology obo file. using version 2021/10 — BRENDA","text":"","code":"BRENDA"},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BRENDA tissue ontology obo file. using version 2021/10 — BRENDA","text":"object class data.frame 6565 rows 2 columns.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDAExistName.html","id":null,"dir":"Reference","previous_headings":"","what":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","title":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","text":"updated 02/2024. Using BRENDA ontology version 2021.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDAExistName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","text":"","code":"BRENDAExistName(x, file = BRENDA)"},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDAExistName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","text":"x name search file BRENDA data frame, columns ID Name","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDAExistName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","text":"TRUE FALSE","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/BRENDAExistName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search for a valid BRENDA ontology term to use for sample type — BRENDAExistName","text":"","code":"BRENDAExistName(\"blood plasma\") #> [1] TRUE BRENDAExistName(\"random tissue\") #> [1] FALSE"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSigFromDifexp.html","id":null,"dir":"Reference","previous_headings":"","what":"create an OmicSignature object from differential expsignaturession matrix — OmicSigFromDifexp","title":"create an OmicSignature object from differential expsignaturession matrix — OmicSigFromDifexp","text":"updated 08/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSigFromDifexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create an OmicSignature object from differential expsignaturession matrix — OmicSigFromDifexp","text":"","code":"OmicSigFromDifexp(difexp, metadata, criteria = NULL)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSigFromDifexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create an OmicSignature object from differential expsignaturession matrix — OmicSigFromDifexp","text":"difexp Differential expression matrix metadata Metadata OmicSignature object. `criteria` `NULL`, criterias extract signatures need provided metadata. can specified metadata fields one followings: `logfc_cutoff`, `score_cutoff`, `adj_p_cutoff`, `p_value_cutoff`. criteria character string specify criterias used extract signatures difexp. e.g. \"logfc > 5; score > 10\". Alternatively, can provided metadata fields: list(\"logfc_cutoff\" = 5, \"score_cutoff\" = 10)","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSigFromDifexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create an OmicSignature object from differential expsignaturession matrix — OmicSigFromDifexp","text":"OmicSignature object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"OmicSignature R6 object — OmicSignature","title":"OmicSignature R6 object — OmicSignature","text":"R6 object store signatures generated experiments. cluding metadata, signature, optional differential expression analysis result dataframe. updated 10/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OmicSignature R6 object — OmicSignature","text":"metadata list describe metadata signature dataframe contains probe_id, feature_name, score (optional) group_label (optional) difexp dataframe differential expression result removeDifexp function remove difexp object","code":""},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OmicSignature R6 object — OmicSignature","text":"OmicSignature$new() OmicSignature$print() OmicSignature$extractSignature() OmicSignature$clone()","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OmicSignature R6 object — OmicSignature","text":"Create new OmicSignature object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignature R6 object — OmicSignature","text":"","code":"OmicSignature$new(metadata, signature, difexp = NULL, print_message = FALSE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignature R6 object — OmicSignature","text":"metadata required. list. See `createMetadata` information signature required. vector, dataframe including columns: \"probe_id\", \"feature_name\" \"group_label\", optional column \"score\" difexp optional print_message use TRUE want see messages printed","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OmicSignature R6 object — OmicSignature","text":"Print OmicSignature object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignature R6 object — OmicSignature","text":"","code":"OmicSignature$print()"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignature R6 object — OmicSignature","text":"","code":"OmicSignature$extractSignature(conditions)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignature R6 object — OmicSignature","text":"conditions conditions new signatures","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OmicSignature R6 object — OmicSignature","text":"dataframe new signatures","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OmicSignature R6 object — OmicSignature","text":"objects class cloneable method.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignature R6 object — OmicSignature","text":"","code":"OmicSignature$clone(deep = FALSE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignature.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignature R6 object — OmicSignature","text":"deep Whether make deep clone.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"OmicSignatureCollection R6 object — OmicSignatureCollection","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"R6 object store collection OmicSignature objects. cluding metadata, OmicSigList list OmicSignature object.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"metadata list describe metadata OmicSigList list OmicSignature object(s)","code":""},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"OmicSignatureCollection$new() OmicSignatureCollection$print() OmicSignatureCollection$extractSignature() OmicSignatureCollection$metadataSummary() OmicSignatureCollection$clone()","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"Create OmicSignatureCollection object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"","code":"OmicSignatureCollection$new(metadata, OmicSigList, print_message = FALSE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"metadata required, must list OmicSigList required, list OmicSignature R6 objects print_message use TRUE want see messages printed","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"Print OmicSignatureCollection object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"","code":"OmicSignatureCollection$print()"},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"","code":"OmicSignatureCollection$extractSignature(conditions, bind = TRUE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"conditions conditions new signatures bind use TRUE return results single dataframe. Otherwise, return list contains result OmicSignature individually","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"dataframe list new signatures","code":""},{"path":[]},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"","code":"OmicSignatureCollection$metadataSummary(only_shared = TRUE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"only_shared use TRUE print shared metadata fields OmicSignatures","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"dataframe summary metadata","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"objects class cloneable method.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"","code":"OmicSignatureCollection$clone(deep = FALSE)"},{"path":"https://montilab.github.io/OmicSignature/reference/OmicSignatureCollection.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmicSignatureCollection R6 object — OmicSignatureCollection","text":"deep Whether make deep clone.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/createMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"template for creating a metadata list for an OmicSignature R6 object — createMetadata","title":"template for creating a metadata list for an OmicSignature R6 object — createMetadata","text":"updated 02/2024","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/createMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"template for creating a metadata list for an OmicSignature R6 object — createMetadata","text":"","code":"createMetadata(   signature_name,   organism,   phenotype = \"unknown\",   assay_type,   covariates = NULL,   platform = \"unknown\",   direction_type,   sample_type = NULL,   signature_collection = NULL,   author = NULL,   year = NULL,   PMID = NULL,   keywords = NULL,   description = NULL,   category_num = NULL,   logfc_cutoff = NULL,   p_value_cutoff = NULL,   adj_p_cutoff = NULL,   score_cutoff = NULL,   cutoff_description = NULL,   others = NULL )"},{"path":"https://montilab.github.io/OmicSignature/reference/createMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"template for creating a metadata list for an OmicSignature R6 object — createMetadata","text":"signature_name required. name signature. organism required. e.g. \"Homo sapiens\", \"Mus musculus\". phenotype optional highly recommended. e.g. \"Gene KO\", \"Parkinson disease\". Use \"unknown\" NULL applicable. assay_type required. e.g. \"transcriptomics\", \"proteomics\", \"metabolomics\", \"methylomics\", \"methylomics\", \"genetic_variations\", \"DNA_binding_sites\". common misspell, e.g. \"gene\", \"protein\", \"metab\" changed automatically. covariates optional. e.g. \"age, gender\". platform optional highly recommended. direction_type required. direction information signature. \"uni\" \"uni-directional\" signature derived one category. \"bi\" \"bi-directional\" signature derived group vs group B, contains \"\" \"\" regulated features continuous phenotype. \"categorical\" signature derived comparisons multiple groups, e.g. vs B vs C. sample_type optional highly recommended. cell line tissue BRENDA ontology. signature_collection optional. collection name signature belongs . author optional. author name. year optional. year signature created published. PMID optional. PubMed ID signature published article. keywords optional. key words signature. examples \"longevity\", \"perturbation\". \"drug\". description optional. free text describe signature. category_num required direction_type = \"categorical\". numeric. indicates many categories class signature contains. logfc_cutoff optional. log fold change cutoff used generate signature, applicable. p_value_cutoff optional. p value cutoff used generate signature, applicable. adj_p_cutoff optional. adjusted p-value, e.g. fdr, cutoff used generate signature, applicable. score_cutoff optional. score cutoff used generate signature, applicable. cutoff_description optional. discription cutoff, applicable. others provide additional user-defined metadata fields list. example, others = list(\"animal_strain\" = \"C57BL/6\", \"lab\" = \"new_lab\").","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/createMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"template for creating a metadata list for an OmicSignature R6 object — createMetadata","text":"metadata list create OmicSignature R6 object.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/diffAnalLm.html","id":null,"dir":"Reference","previous_headings":"","what":"differential expression analysis using limma package — diffAnalLm","title":"differential expression analysis using limma package — diffAnalLm","text":"updated 08/2020","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/diffAnalLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"differential expression analysis using limma package — diffAnalLm","text":"","code":"diffAnalLm(dat, ctrl_columns = c(2:4), trt_columns = c(5:7), id = \"ID_REF\")"},{"path":"https://montilab.github.io/OmicSignature/reference/diffAnalLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"differential expression analysis using limma package — diffAnalLm","text":"dat dataframe matrix containing expression data. rows features (e.g. genes) columns samples. ctrl_columns column names (character vector) column numbers (numeric vector) control samples. input type need consistant trt_columns. trt_columns column names (character vector) column numbers (numeric vector) treatment samples. input type need consistant ctrl_columns. id id features, usually probe id. either column name input dataframe contains id, character vector actual ids features.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/diffAnalLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"differential expression analysis using limma package — diffAnalLm","text":"dataframe differential analysis","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_assaytypes.html","id":null,"dir":"Reference","previous_headings":"","what":"predefined assay type list — predefined_assaytypes","title":"predefined assay type list — predefined_assaytypes","text":"list predefined assay type names","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_assaytypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predefined assay type list — predefined_assaytypes","text":"","code":"predefined_assaytypes"},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_assaytypes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"predefined assay type list — predefined_assaytypes","text":"object class character length 7.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_organisms.html","id":null,"dir":"Reference","previous_headings":"","what":"predefined organism list — predefined_organisms","title":"predefined organism list — predefined_organisms","text":"list predefined organism names","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_organisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predefined organism list — predefined_organisms","text":"","code":"predefined_organisms"},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_organisms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"predefined organism list — predefined_organisms","text":"object class character length 9.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_platforms.html","id":null,"dir":"Reference","previous_headings":"","what":"predefined platform list — predefined_platforms","title":"predefined platform list — predefined_platforms","text":"list predefined platform names","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_platforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predefined platform list — predefined_platforms","text":"","code":"predefined_platforms"},{"path":"https://montilab.github.io/OmicSignature/reference/predefined_platforms.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"predefined platform list — predefined_platforms","text":"object class character length 28.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/readJson.html","id":null,"dir":"Reference","previous_headings":"","what":"read an OmicSignature object from json txt file created by writeJson() — readJson","title":"read an OmicSignature object from json txt file created by writeJson() — readJson","text":"avoid confusion, json text file, assume column names signature dataframe difexp dataframe prefix \"sig_\" \"difexp\". corresponds writeJson() function. updated 04/2024","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/readJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read an OmicSignature object from json txt file created by writeJson() — readJson","text":"","code":"readJson(filename)"},{"path":"https://montilab.github.io/OmicSignature/reference/readJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read an OmicSignature object from json txt file created by writeJson() — readJson","text":"filename json file name read ","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/readJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read an OmicSignature object from json txt file created by writeJson() — readJson","text":"OmicSignature object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/replaceDifexpCol.html","id":null,"dir":"Reference","previous_headings":"","what":"rename the columns of a differential analysis matrix for OmicSignature R6 object — replaceDifexpCol","title":"rename the columns of a differential analysis matrix for OmicSignature R6 object — replaceDifexpCol","text":"updated 10/2024","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/replaceDifexpCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rename the columns of a differential analysis matrix for OmicSignature R6 object — replaceDifexpCol","text":"","code":"replaceDifexpCol(colname)"},{"path":"https://montilab.github.io/OmicSignature/reference/replaceDifexpCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rename the columns of a differential analysis matrix for OmicSignature R6 object — replaceDifexpCol","text":"colname character vector, especially column name differential analysis matrix, .e. colnames(difexp) , difexp matrix , column name modified matrix returned.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/replaceDifexpCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rename the columns of a differential analysis matrix for OmicSignature R6 object — replaceDifexpCol","text":"standardized column names difexp matrix creating OmicSignature R6 object","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchAssayType.html","id":null,"dir":"Reference","previous_headings":"","what":"search for an assay type to use — searchAssayType","title":"search for an assay type to use — searchAssayType","text":"updated 10/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchAssayType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search for an assay type to use — searchAssayType","text":"","code":"searchAssayType(x = \"\")"},{"path":"https://montilab.github.io/OmicSignature/reference/searchAssayType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search for an assay type to use — searchAssayType","text":"x string search . empty, return available assay types.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchAssayType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search for an assay type to use — searchAssayType","text":"search result","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchAssayType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search for an assay type to use — searchAssayType","text":"","code":"searchAssayType() #> [1] \"transcriptomics\"    \"proteomics\"         \"metabolomics\"       #> [4] \"methylomics\"        \"genetic_variations\" \"DNA_binding_sites\"  #> [7] \"other\"              searchAssayType(\"transcript\") #> [1] \"transcriptomics\""},{"path":"https://montilab.github.io/OmicSignature/reference/searchOrganism.html","id":null,"dir":"Reference","previous_headings":"","what":"search for a pre-defined organism name to use — searchOrganism","title":"search for a pre-defined organism name to use — searchOrganism","text":"updated 05/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchOrganism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search for a pre-defined organism name to use — searchOrganism","text":"","code":"searchOrganism(x = \"\", organism = predefined_organisms)"},{"path":"https://montilab.github.io/OmicSignature/reference/searchOrganism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search for a pre-defined organism name to use — searchOrganism","text":"x string search (case-insensitive). empty, return available organisms. organism pre-defined organism character variable.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchOrganism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search for a pre-defined organism name to use — searchOrganism","text":"character search result","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchOrganism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search for a pre-defined organism name to use — searchOrganism","text":"","code":"searchOrganism() #> [1] \"unknown\"                 \"Homo sapiens\"            #> [3] \"Mus musculus\"            \"Rattus norvegicus\"       #> [5] \"Danio rerio\"             \"Heterocephalus glaber\"   #> [7] \"Caenorhabditis elegans\"  \"Drosophila melanogaster\" #> [9] \"Arabidopsis thaliana\"    searchOrganism(\"homo\") #> [1] \"Homo sapiens\""},{"path":"https://montilab.github.io/OmicSignature/reference/searchPlatform.html","id":null,"dir":"Reference","previous_headings":"","what":"search for a platform name to use — searchPlatform","title":"search for a platform name to use — searchPlatform","text":"updated 05/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchPlatform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search for a platform name to use — searchPlatform","text":"","code":"searchPlatform(x = \"\", platforms = predefined_platforms, contain_all = TRUE)"},{"path":"https://montilab.github.io/OmicSignature/reference/searchPlatform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search for a platform name to use — searchPlatform","text":"x string character vector search . input character vector searching multiple terms. empty, return available organisms. platforms pre-defined platform information character variable. contain_all TRUE, results contain search terms returned. FALSE, results contain given term returned.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchPlatform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search for a platform name to use — searchPlatform","text":"character dataframe search result","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchPlatform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search for a platform name to use — searchPlatform","text":"","code":"searchPlatform() #>  [1] \"unknown\"                                     #>  [2] \"DNA assay by ChIP-seq\"                       #>  [3] \"DNA assay by ATAC-seq\"                       #>  [4] \"genotyping by array\"                         #>  [5] \"genotyping by whole-genome-sequencing\"       #>  [6] \"transcriptomics by array\"                    #>  [7] \"transcriptomics by bulk RNA-seq\"             #>  [8] \"transcriptomics by long-read sequencing\"     #>  [9] \"transcriptomics by single-cell RNA-seq\"      #> [10] \"ribosome transcriptomics\"                    #> [11] \"spatial transcriptomics\"                     #> [12] \"single-cell spatial transcriptomics\"         #> [13] \"proteomics by array\"                         #> [14] \"proteomics by mass spectrometry\"             #> [15] \"proteomics by NMR\"                           #> [16] \"proteomics by antibody or aptamer\"           #> [17] \"proteomics by fluorescence\"                  #> [18] \"single-cell proteomics by mass spectrometry\" #> [19] \"metabolomics by mass spectrometry\"           #> [20] \"metabolomics by gas chromatography\"          #> [21] \"metabolomics by liquid chromatography HPLC\"  #> [22] \"metabolomics by NMR\"                         #> [23] \"metabolomics by fluorescence\"                #> [24] \"methylation by array\"                        #> [25] \"methylation by bisulfite sequencing\"         #> [26] \"methylation by immunoprecipitation\"          #> [27] \"single-cell CITE-seq\"                        #> [28] \"cell flow cytometry\"                         searchPlatform(\"proteomics\") #> [1] \"proteomics by array\"                         #> [2] \"proteomics by mass spectrometry\"             #> [3] \"proteomics by NMR\"                           #> [4] \"proteomics by antibody or aptamer\"           #> [5] \"proteomics by fluorescence\"                  #> [6] \"single-cell proteomics by mass spectrometry\" searchPlatform(c(\"transcript\", \"single-cell\"), contain_all = TRUE) #> [1] \"transcriptomics by single-cell RNA-seq\" #> [2] \"single-cell spatial transcriptomics\""},{"path":"https://montilab.github.io/OmicSignature/reference/searchSampleType.html","id":null,"dir":"Reference","previous_headings":"","what":"searchSampleType — searchSampleType","title":"searchSampleType — searchSampleType","text":"search BRENDA tissue name updated 02/2024","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchSampleType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"searchSampleType — searchSampleType","text":"","code":"searchSampleType(x, file = BRENDA, contain_all = TRUE)"},{"path":"https://montilab.github.io/OmicSignature/reference/searchSampleType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"searchSampleType — searchSampleType","text":"x string character vector search (case-insensitive). Multiple search terms can separated space, input character vector. file BRENDA data frame, columns ID Name. contain_all TRUE, return results contain search terms. FALSE, return results contain given pattern.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchSampleType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"searchSampleType — searchSampleType","text":"matrix including search result","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/searchSampleType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"searchSampleType — searchSampleType","text":"","code":"# search for results that contain all of \"HEK\" \"293\" and \"T\": searchSampleType(\"HEK 293 T\", contain_all = TRUE) #>               ID                      Name #> 2181 BTO:0002181             HEK-293T cell #> 3347 BTO:0003347    HEK-293 Tet-On 3G cell #> 5022 BTO:0005025         HEK-293-TrkB cell #> 5026 BTO:0005029            HEK-293FT cell #> 5545 BTO:0005548            HEK-293ET cell #> 6319 BTO:0006322 Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328          HEK-293T/17 cell #> 6510 BTO:0006513          HEK-293-AT1 cell searchSampleType(c(\"HEK\", \"293\", \"T\"), contain_all = TRUE) #>               ID                      Name #> 2181 BTO:0002181             HEK-293T cell #> 3347 BTO:0003347    HEK-293 Tet-On 3G cell #> 5022 BTO:0005025         HEK-293-TrkB cell #> 5026 BTO:0005029            HEK-293FT cell #> 5545 BTO:0005548            HEK-293ET cell #> 6319 BTO:0006322 Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328          HEK-293T/17 cell #> 6510 BTO:0006513          HEK-293-AT1 cell searchSampleType(c(\"HEK 293\", \"T\"), contain_all = TRUE) #>               ID                      Name #> 2181 BTO:0002181             HEK-293T cell #> 3347 BTO:0003347    HEK-293 Tet-On 3G cell #> 5022 BTO:0005025         HEK-293-TrkB cell #> 5026 BTO:0005029            HEK-293FT cell #> 5545 BTO:0005548            HEK-293ET cell #> 6319 BTO:0006322 Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328          HEK-293T/17 cell #> 6510 BTO:0006513          HEK-293-AT1 cell  # search for results that contain any of \"HEK\", \"SUM\" or \"HeLa\": searchSampleType(\"HEK SUM HeLa\", contain_all = FALSE) #>               ID                                  Name #> 568  BTO:0000567                             HeLa cell #> 569  BTO:0000568                          HeLa-S3 cell #> 2772 BTO:0002772                                 chela #> 3180 BTO:0003180                          HeLa-80 cell #> 3587 BTO:0003587                   HeLa-MAGI-CCR5 cell #> 3588 BTO:0003588                        HeLa-MAGI cell #> 3602 BTO:0003602             HeLa GFP-histone H2B cell #> 5027 BTO:0005030                         HeLa-229 cell #> 5035 BTO:0005038                HeLa-LTRHIV-1-Luc cell #> 5996 BTO:0005999                           chelate leg #> 6088 BTO:0006091                       HeLa-HL3T1 cell #> 26   BTO:0000024                              abomasum #> 274  BTO:0000272                     colon transversum #> 350  BTO:0000348                                omasum #> 363  BTO:0000361                    stratum granulosum #> 437  BTO:0000435                      stratum spinosum #> 616  BTO:0000615                       corpus callosum #> 1713 BTO:0001713                                dorsum #> 2018 BTO:0002018          corpus cavernosum clitoridis #> 2019 BTO:0002019               corpus cavernosum penis #> 3677 BTO:0003677                     chorion frondosum #> 4134 BTO:0004136                         Kasumi-1 cell #> 4423 BTO:0004425          stratum granulosum cerebelli #> 4925 BTO:0004928                        SUM-159PT cell #> 5384 BTO:0005387                        SUM-102PT cell #> 5385 BTO:0005388                          SUM-149 cell #> 5386 BTO:0005389                         SUM-44PE cell #> 5387 BTO:0005390                         SUM-52PE cell #> 5388 BTO:0005391                          SUM-225 cell #> 5389 BTO:0005392                          SUM-229 cell #> 5390 BTO:0005393                          SUM-190 cell #> 5391 BTO:0005394                          SUM-185 cell #> 5451 BTO:0005454                     corpus cavernosum #> 5472 BTO:0005475                        SUM-149PT cell #> 5473 BTO:0005476                        SUM-185PE cell #> 5474 BTO:0005477                        SUM-190PT cell #> 5475 BTO:0005478                       SUM-225CWN cell #> 5476 BTO:0005479                        SUM-229PE cell #> 5500 BTO:0005503       corpus cavernosum smooth muscle #> 5929 BTO:0005932                              SUM cell #> 5930 BTO:0005933                      SUM-1315MO2 cell #> 6265 BTO:0006268 organum vasculosum laminae terminalis #> 9    BTO:0000007                          HEK-293 cell #> 2181 BTO:0002181                         HEK-293T cell #> 2524 BTO:0002524                         HEK-293A cell #> 2732 BTO:0002732                      HEK-293CymR cell #> 2974 BTO:0002974                     HEK-293-EBNA cell #> 3032 BTO:0003032                         HEK-293F cell #> 3033 BTO:0003033                         HEK-293H cell #> 3182 BTO:0003182                             NHEK cell #> 3263 BTO:0003263                        HEK-AD293 cell #> 3347 BTO:0003347                HEK-293 Tet-On 3G cell #> 3468 BTO:0003468                        HEK-293B2 cell #> 3615 BTO:0003615                HEK-293 PEAKrapid cell #> 4073 BTO:0004075                       D1-HEK-293 cell #> 4790 BTO:0004792                           RHEK-1 cell #> 5022 BTO:0005025                     HEK-293-TrkB cell #> 5026 BTO:0005029                        HEK-293FT cell #> 5545 BTO:0005548                        HEK-293ET cell #> 5836 BTO:0005839                       HEK-293VnR cell #> 6094 BTO:0006097                             HEKa cell #> 6319 BTO:0006322             Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328                      HEK-293T/17 cell #> 6419 BTO:0006422                   HEK-293-APPswe cell #> 6450 BTO:0006453                         HEK-293S cell #> 6510 BTO:0006513                      HEK-293-AT1 cell searchSampleType(c(\"HEK\", \"SUM\", \"HeLa\"), contain_all = FALSE) #>               ID                                  Name #> 568  BTO:0000567                             HeLa cell #> 569  BTO:0000568                          HeLa-S3 cell #> 2772 BTO:0002772                                 chela #> 3180 BTO:0003180                          HeLa-80 cell #> 3587 BTO:0003587                   HeLa-MAGI-CCR5 cell #> 3588 BTO:0003588                        HeLa-MAGI cell #> 3602 BTO:0003602             HeLa GFP-histone H2B cell #> 5027 BTO:0005030                         HeLa-229 cell #> 5035 BTO:0005038                HeLa-LTRHIV-1-Luc cell #> 5996 BTO:0005999                           chelate leg #> 6088 BTO:0006091                       HeLa-HL3T1 cell #> 26   BTO:0000024                              abomasum #> 274  BTO:0000272                     colon transversum #> 350  BTO:0000348                                omasum #> 363  BTO:0000361                    stratum granulosum #> 437  BTO:0000435                      stratum spinosum #> 616  BTO:0000615                       corpus callosum #> 1713 BTO:0001713                                dorsum #> 2018 BTO:0002018          corpus cavernosum clitoridis #> 2019 BTO:0002019               corpus cavernosum penis #> 3677 BTO:0003677                     chorion frondosum #> 4134 BTO:0004136                         Kasumi-1 cell #> 4423 BTO:0004425          stratum granulosum cerebelli #> 4925 BTO:0004928                        SUM-159PT cell #> 5384 BTO:0005387                        SUM-102PT cell #> 5385 BTO:0005388                          SUM-149 cell #> 5386 BTO:0005389                         SUM-44PE cell #> 5387 BTO:0005390                         SUM-52PE cell #> 5388 BTO:0005391                          SUM-225 cell #> 5389 BTO:0005392                          SUM-229 cell #> 5390 BTO:0005393                          SUM-190 cell #> 5391 BTO:0005394                          SUM-185 cell #> 5451 BTO:0005454                     corpus cavernosum #> 5472 BTO:0005475                        SUM-149PT cell #> 5473 BTO:0005476                        SUM-185PE cell #> 5474 BTO:0005477                        SUM-190PT cell #> 5475 BTO:0005478                       SUM-225CWN cell #> 5476 BTO:0005479                        SUM-229PE cell #> 5500 BTO:0005503       corpus cavernosum smooth muscle #> 5929 BTO:0005932                              SUM cell #> 5930 BTO:0005933                      SUM-1315MO2 cell #> 6265 BTO:0006268 organum vasculosum laminae terminalis #> 9    BTO:0000007                          HEK-293 cell #> 2181 BTO:0002181                         HEK-293T cell #> 2524 BTO:0002524                         HEK-293A cell #> 2732 BTO:0002732                      HEK-293CymR cell #> 2974 BTO:0002974                     HEK-293-EBNA cell #> 3032 BTO:0003032                         HEK-293F cell #> 3033 BTO:0003033                         HEK-293H cell #> 3182 BTO:0003182                             NHEK cell #> 3263 BTO:0003263                        HEK-AD293 cell #> 3347 BTO:0003347                HEK-293 Tet-On 3G cell #> 3468 BTO:0003468                        HEK-293B2 cell #> 3615 BTO:0003615                HEK-293 PEAKrapid cell #> 4073 BTO:0004075                       D1-HEK-293 cell #> 4790 BTO:0004792                           RHEK-1 cell #> 5022 BTO:0005025                     HEK-293-TrkB cell #> 5026 BTO:0005029                        HEK-293FT cell #> 5545 BTO:0005548                        HEK-293ET cell #> 5836 BTO:0005839                       HEK-293VnR cell #> 6094 BTO:0006097                             HEKa cell #> 6319 BTO:0006322             Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328                      HEK-293T/17 cell #> 6419 BTO:0006422                   HEK-293-APPswe cell #> 6450 BTO:0006453                         HEK-293S cell #> 6510 BTO:0006513                      HEK-293-AT1 cell searchSampleType(c(\"HEK SUM\", \"HeLa\"), contain_all = FALSE) #>               ID                                  Name #> 568  BTO:0000567                             HeLa cell #> 569  BTO:0000568                          HeLa-S3 cell #> 2772 BTO:0002772                                 chela #> 3180 BTO:0003180                          HeLa-80 cell #> 3587 BTO:0003587                   HeLa-MAGI-CCR5 cell #> 3588 BTO:0003588                        HeLa-MAGI cell #> 3602 BTO:0003602             HeLa GFP-histone H2B cell #> 5027 BTO:0005030                         HeLa-229 cell #> 5035 BTO:0005038                HeLa-LTRHIV-1-Luc cell #> 5996 BTO:0005999                           chelate leg #> 6088 BTO:0006091                       HeLa-HL3T1 cell #> 26   BTO:0000024                              abomasum #> 274  BTO:0000272                     colon transversum #> 350  BTO:0000348                                omasum #> 363  BTO:0000361                    stratum granulosum #> 437  BTO:0000435                      stratum spinosum #> 616  BTO:0000615                       corpus callosum #> 1713 BTO:0001713                                dorsum #> 2018 BTO:0002018          corpus cavernosum clitoridis #> 2019 BTO:0002019               corpus cavernosum penis #> 3677 BTO:0003677                     chorion frondosum #> 4134 BTO:0004136                         Kasumi-1 cell #> 4423 BTO:0004425          stratum granulosum cerebelli #> 4925 BTO:0004928                        SUM-159PT cell #> 5384 BTO:0005387                        SUM-102PT cell #> 5385 BTO:0005388                          SUM-149 cell #> 5386 BTO:0005389                         SUM-44PE cell #> 5387 BTO:0005390                         SUM-52PE cell #> 5388 BTO:0005391                          SUM-225 cell #> 5389 BTO:0005392                          SUM-229 cell #> 5390 BTO:0005393                          SUM-190 cell #> 5391 BTO:0005394                          SUM-185 cell #> 5451 BTO:0005454                     corpus cavernosum #> 5472 BTO:0005475                        SUM-149PT cell #> 5473 BTO:0005476                        SUM-185PE cell #> 5474 BTO:0005477                        SUM-190PT cell #> 5475 BTO:0005478                       SUM-225CWN cell #> 5476 BTO:0005479                        SUM-229PE cell #> 5500 BTO:0005503       corpus cavernosum smooth muscle #> 5929 BTO:0005932                              SUM cell #> 5930 BTO:0005933                      SUM-1315MO2 cell #> 6265 BTO:0006268 organum vasculosum laminae terminalis #> 9    BTO:0000007                          HEK-293 cell #> 2181 BTO:0002181                         HEK-293T cell #> 2524 BTO:0002524                         HEK-293A cell #> 2732 BTO:0002732                      HEK-293CymR cell #> 2974 BTO:0002974                     HEK-293-EBNA cell #> 3032 BTO:0003032                         HEK-293F cell #> 3033 BTO:0003033                         HEK-293H cell #> 3182 BTO:0003182                             NHEK cell #> 3263 BTO:0003263                        HEK-AD293 cell #> 3347 BTO:0003347                HEK-293 Tet-On 3G cell #> 3468 BTO:0003468                        HEK-293B2 cell #> 3615 BTO:0003615                HEK-293 PEAKrapid cell #> 4073 BTO:0004075                       D1-HEK-293 cell #> 4790 BTO:0004792                           RHEK-1 cell #> 5022 BTO:0005025                     HEK-293-TrkB cell #> 5026 BTO:0005029                        HEK-293FT cell #> 5545 BTO:0005548                        HEK-293ET cell #> 5836 BTO:0005839                       HEK-293VnR cell #> 6094 BTO:0006097                             HEKa cell #> 6319 BTO:0006322             Jump-In-T-REx HEK293 cell #> 6325 BTO:0006328                      HEK-293T/17 cell #> 6419 BTO:0006422                   HEK-293-APPswe cell #> 6450 BTO:0006453                         HEK-293S cell #> 6510 BTO:0006513                      HEK-293-AT1 cell"},{"path":"https://montilab.github.io/OmicSignature/reference/signatureVecToDF.html","id":null,"dir":"Reference","previous_headings":"","what":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","title":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","text":"updated 08/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/signatureVecToDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","text":"","code":"signatureVecToDF(input, group_labels = NULL)"},{"path":"https://montilab.github.io/OmicSignature/reference/signatureVecToDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","text":"input character vector significant feature names, numeric vector scores named feature names. group_labels optional. character vector length 2. group_labels = c(\"Group1\", \"Group2\"), indicates analysis Group1 vs Group2, positive scores indicate higher value Group1.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/signatureVecToDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","text":"signature dataframe columns \"feature_name\", along \"score\" \"group_label\" applicable.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/signatureVecToDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"change a signature vector into a dataframe to be saved into OmicSignature object — signatureVecToDF","text":"","code":"signatures <- c(\"gene1\", \"gene2\", \"gene3\") signatureVecToDF(signatures) #>   probe_id feature_name #> 1        1        gene1 #> 2        2        gene2 #> 3        3        gene3  signatures <- c(0.45, -3.21, 2.44) names(signatures) <- c(\"gene1\", \"gene2\", \"gene3\") signatureVecToDF(signatures) #>   probe_id feature_name score #> 1        1        gene1  0.45 #> 2        2        gene2 -3.21 #> 3        3        gene3  2.44 signatureVecToDF(signatures, group_labels = c(\"Group1\", \"Group2\")) #>   probe_id feature_name score group_label #> 1        1        gene1  0.45      Group1 #> 2        2        gene2 -3.21      Group2 #> 3        3        gene3  2.44      Group1"},{"path":"https://montilab.github.io/OmicSignature/reference/standardizeSigDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize signature data frame — standardizeSigDF","title":"Standardize signature data frame — standardizeSigDF","text":"remove missing duplicated symbols. updated 08/2025.","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/standardizeSigDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize signature data frame — standardizeSigDF","text":"","code":"standardizeSigDF(sigdf)"},{"path":"https://montilab.github.io/OmicSignature/reference/standardizeSigDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize signature data frame — standardizeSigDF","text":"sigdf signature dataframe","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/standardizeSigDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize signature data frame — standardizeSigDF","text":"signature dataframe empty, duplicate rows removed ordered score","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/writeJson.html","id":null,"dir":"Reference","previous_headings":"","what":"write OmicSignature object into json txt format — writeJson","title":"write OmicSignature object into json txt format — writeJson","text":"avoid confusion, written json text file, column names signature dataframe difexp dataframe prefix \"sig_\" \"difexp\" added. corresponds readJson() function. updated 08/2025","code":""},{"path":"https://montilab.github.io/OmicSignature/reference/writeJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write OmicSignature object into json txt format — writeJson","text":"","code":"writeJson(OmicObj, file)"},{"path":"https://montilab.github.io/OmicSignature/reference/writeJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write OmicSignature object into json txt format — writeJson","text":"OmicObj OmicSignature object file file name write","code":""}]
